panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=8),
legend.title = element_text(size = 6),
legend.text  = element_text(size = 4))
plot
plot <- subset[selection,votinglist] %>%
rownames_to_column() %>%
gather("lambda", "rank", -rowname) %>%
mutate(rank = as.numeric(rank)) %>%
ggplot(aes(y=rowname, x=lambda, fill=rank)) +
geom_tile(color="white") +
scale_fill_gradient2(low = "white", high = "purple",
aesthetics = "fill") +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_discrete(expand = c(0, 0)) +
guides(fill = guide_colorbar(barwidth = 0.4)) +
guides(fill = guide_legend(title = "Rank")) +
xlab('Labels') +
ylab('Record') +
theme_bw() +
theme(plot.title = element_text(vjust=0, size=8),
legend.box.margin=margin(0, 0, 0, -10),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=8),
legend.title = element_text(size = 6),
legend.text  = element_text(size = 4))
plot
plot
name <- paste0("subgroup1noneaverage.pdf", "")
ggsave(name, width = 10, height = 6, units = "cm")
# random sample of size 20
set.seed(25112021)
selection <- sample.int(n=nrow(subset), size=10, replace=FALSE)
plot <- subset[selection,votinglist] %>%
rownames_to_column() %>%
gather("lambda", "rank", -rowname) %>%
mutate(rank = as.numeric(rank)) %>%
ggplot(aes(y=rowname, x=lambda, fill=rank)) +
geom_tile(color="white") +
scale_fill_gradient2(low = "white", high = "purple",
aesthetics = "fill") +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_discrete(expand = c(0, 0)) +
guides(fill = guide_colorbar(barwidth = 0.2)) +
guides(fill = guide_legend(title = "Rank")) +
xlab('Labels') +
ylab('Record') +
theme_bw() +
theme(plot.title = element_text(vjust=0, size=8),
legend.box.margin=margin(0, 0, 0, -10),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=8),
legend.title = element_text(size = 6),
legend.text  = element_text(size = 4))
plot
plot <- subset[selection,votinglist] %>%
rownames_to_column() %>%
gather("lambda", "rank", -rowname) %>%
mutate(rank = as.numeric(rank)) %>%
ggplot(aes(y=rowname, x=lambda, fill=rank)) +
geom_tile(color="white") +
scale_fill_gradient2(low = "white", high = "purple",
aesthetics = "fill") +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_discrete(expand = c(0, 0)) +
guides(fill = guide_coloursteps(barwidth = 0.2)) +
guides(fill = guide_legend(title = "Rank")) +
xlab('Labels') +
ylab('Record') +
theme_bw() +
theme(plot.title = element_text(vjust=0, size=8),
legend.box.margin=margin(0, 0, 0, -10),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=8),
legend.title = element_text(size = 6),
legend.text  = element_text(size = 4))
plot
plot <- subset[selection,votinglist] %>%
rownames_to_column() %>%
gather("lambda", "rank", -rowname) %>%
mutate(rank = as.numeric(rank)) %>%
ggplot(aes(y=rowname, x=lambda, fill=rank)) +
geom_tile(color="white") +
scale_fill_gradient2(low = "white", high = "purple",
aesthetics = "fill") +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_discrete(expand = c(0, 0)) +
guides(fill = guide_coloursteps(barwidth = -2)) +
guides(fill = guide_legend(title = "Rank")) +
xlab('Labels') +
ylab('Record') +
theme_bw() +
theme(plot.title = element_text(vjust=0, size=8),
legend.box.margin=margin(0, 0, 0, -10),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=8),
legend.title = element_text(size = 6),
legend.text  = element_text(size = 4))
plot
plot <- subset[selection,votinglist] %>%
rownames_to_column() %>%
gather("lambda", "rank", -rowname) %>%
mutate(rank = as.numeric(rank)) %>%
ggplot(aes(y=rowname, x=lambda, fill=rank)) +
geom_tile(color="white") +
scale_fill_gradient2(low = "white", high = "purple",
aesthetics = "fill") +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_discrete(expand = c(0, 0)) +
guides(fill = guide_colorsteps(barwidth = 0.2)) +
guides(fill = guide_legend(title = "Rank")) +
xlab('Labels') +
ylab('Record') +
theme_bw() +
theme(plot.title = element_text(vjust=0, size=8),
legend.box.margin=margin(0, 0, 0, -10),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=8),
legend.title = element_text(size = 6),
legend.text  = element_text(size = 4))
plot
# random sample of size 20
set.seed(25112021)
selection <- sample.int(n=nrow(subset), size=10, replace=FALSE)
plot <- subset[selection,votinglist] %>%
rownames_to_column() %>%
gather("lambda", "rank", -rowname) %>%
mutate(rank = as.numeric(rank)) %>%
ggplot(aes(y=rowname, x=lambda, fill=rank)) +
geom_tile(color="white") +
scale_fill_gradient2(low = "white", high = "purple",
aesthetics = "fill") +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_discrete(expand = c(0, 0)) +
guides(fill = guide_colorsteps(barwidth = 0.2)) +
guides(fill = guide_legend(title = "Rank")) +
xlab('Labels') +
ylab('Record') +
theme_bw() +
theme(plot.title = element_text(vjust=0, size=8),
legend.box.margin=margin(0, 0, 0, -10),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=8),
legend.title = element_text(size = 6),
legend.text  = element_text(size = 4))
plot
name <- paste0("subgroup1noneaverage.pdf", "")
ggsave(name, width = 10, height = 3, units = "cm")
plot <- subset[selection,votinglist] %>%
rownames_to_column() %>%
gather("lambda", "rank", -rowname) %>%
mutate(rank = as.numeric(rank)) %>%
ggplot(aes(y=rowname, x=lambda, fill=rank)) +
geom_tile(color="white") +
scale_fill_gradient2(low = "white", high = "purple",
aesthetics = "fill") +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_discrete(expand = c(0, 0)) +
guides(fill = guide_colorsteps(barwidth = 0.2)) +
guides(fill = guide_legend(title = "Rank")) +
xlab('Labels') +
ylab('Record') +
theme_bw() +
theme(plot.title = element_text(vjust=0, size=8),
legend.box.margin=margin(0, 0, 0, -10),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=2),
axis.title = element_text(size=8),
legend.title = element_text(size = 6),
legend.text  = element_text(size = 4))
plot
name <- paste0("subgroup1noneaverage.pdf", "")
ggsave(name, width = 10, height = 3, units = "cm")
plot <- subset[selection,votinglist] %>%
rownames_to_column() %>%
gather("lambda", "rank", -rowname) %>%
mutate(rank = as.numeric(rank)) %>%
ggplot(aes(y=rowname, x=lambda, fill=rank)) +
geom_tile(color="white") +
scale_fill_gradient2(low = "white", high = "purple",
aesthetics = "fill") +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_discrete(expand = c(0, 0)) +
guides(fill = guide_colorsteps(barwidth = 0.2)) +
guides(fill = guide_legend(title = "Rank")) +
xlab('Labels') +
ylab('Record') +
theme_bw() +
theme(plot.title = element_text(vjust=0, size=8),
legend.box.margin=margin(0, 0, 0, -10),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=1),
axis.title = element_text(size=8),
legend.title = element_text(size = 6),
legend.text  = element_text(size = 4))
plot
name <- paste0("subgroup1noneaverage.pdf", "")
ggsave(name, width = 10, height = 3, units = "cm")
plot <- subset[selection,votinglist] %>%
rownames_to_column() %>%
gather("lambda", "rank", -rowname) %>%
mutate(rank = as.numeric(rank)) %>%
ggplot(aes(y=rowname, x=lambda, fill=rank)) +
geom_tile(color="white") +
scale_fill_gradient2(low = "white", high = "purple",
aesthetics = "fill") +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_discrete(expand = c(0, 0)) +
guides(fill = guide_colorsteps(barwidth = 0.2)) +
guides(fill = guide_legend(title = "Rank")) +
xlab('Labels') +
ylab('Record') +
theme_bw() +
theme(plot.title = element_text(vjust=0, size=8),
legend.box.margin=margin(0, 0, 0, -10),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.text.y = element_text(size=4),
axis.title = element_text(size=8),
legend.title = element_text(size = 6),
legend.text  = element_text(size = 4))
plot
name <- paste0("subgroup1noneaverage.pdf", "")
ggsave(name, width = 10, height = 3, units = "cm")
"parwise" = "type: pairwise")) +
# overall plot
plot <- plotdata %>%
#filter(correction %in% c("none", "entropy", "sqrtnN")) %>%
filter(correction %in% c("labelwise", "pairwise", "norm")) %>%
ggplot(aes(y=sg, x=lambda, fill=rank)) +
geom_tile(color="white") +
facet_grid(comparison ~ correction,
#labeller = label_both) +
labeller = labeller(correction =
c("none" = "type: none",
"labelwise" = "type: labelwise",
"parwise" = "type: pairwise"))) +
scale_colour_gradient2(low = "red", mid = "white",
high = "blue", midpoint = 0,
aesthetics = "fill",
limits=c(-10, 10)) +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_continuous(expand = c(0, 0)) +
guides(fill = guide_colorbar(barwidth = 3, barheight = 0.5)) +
xlab('Labels') +
#ylab('Subgroup') +
ylab("Subgroup                                        Complement                                        Subgroup") +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
legend.title = element_blank(),#element_text(size = 6),
legend.text  = element_text(size = 4),
legend.position="bottom",
legend.justification="right",
legend.margin=margin(-20, 0, 0, 0))
plot
# overall plot
plot <- plotdata %>%
#filter(correction %in% c("none", "entropy", "sqrtnN")) %>%
filter(correction %in% c("labelwise", "pairwise", "norm")) %>%
ggplot(aes(y=sg, x=lambda, fill=rank)) +
geom_tile(color="white") +
facet_grid(comparison ~ correction,
#labeller = label_both) +
labeller = labeller(correction =
c("norm" = "type: norm",
"labelwise" = "type: labelwise",
"parwise" = "type: pairwise"))) +
scale_colour_gradient2(low = "red", mid = "white",
high = "blue", midpoint = 0,
aesthetics = "fill",
limits=c(-10, 10)) +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_continuous(expand = c(0, 0)) +
guides(fill = guide_colorbar(barwidth = 3, barheight = 0.5)) +
xlab('Labels') +
#ylab('Subgroup') +
ylab("Subgroup                                        Complement                                        Subgroup") +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
legend.title = element_blank(),#element_text(size = 6),
legend.text  = element_text(size = 4),
legend.position="bottom",
legend.justification="right",
legend.margin=margin(-20, 0, 0, 0))
plot
# overall plot
plot <- plotdata %>%
#filter(correction %in% c("none", "entropy", "sqrtnN")) %>%
filter(correction %in% c("labelwise", "pairwise", "norm")) %>%
ggplot(aes(y=sg, x=lambda, fill=rank)) +
geom_tile(color="white") +
facet_grid(comparison ~ correction,
#labeller = label_both) +
labeller = labeller(correction =
c("norm" = "type: norm",
"labelwise" = "type: labelwise",
"pairwise" = "type: pairwise"))) +
scale_colour_gradient2(low = "red", mid = "white",
high = "blue", midpoint = 0,
aesthetics = "fill",
limits=c(-10, 10)) +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_continuous(expand = c(0, 0)) +
guides(fill = guide_colorbar(barwidth = 3, barheight = 0.5)) +
xlab('Labels') +
#ylab('Subgroup') +
ylab("Subgroup                                        Complement                                        Subgroup") +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
legend.title = element_blank(),#element_text(size = 6),
legend.text  = element_text(size = 4),
legend.position="bottom",
legend.justification="right",
legend.margin=margin(-20, 0, 0, 0))
plot
# overall plot
plot <- plotdata %>%
#filter(correction %in% c("none", "entropy", "sqrtnN")) %>%
filter(correction %in% c("labelwise", "pairwise", "norm")) %>%
ggplot(aes(y=sg, x=lambda, fill=rank)) +
geom_tile(color="white") +
facet_grid(comparison ~ correction,
#labeller = label_both) +
labeller = labeller(correction =
c("norm" = "type: norm",
"labelwise" = "type: labelwise",
"pairwise" = "type: pairwise"))) +
scale_colour_gradient2(low = "red", mid = "white",
high = "blue", midpoint = 0,
aesthetics = "fill",
limits=c(-10, 10)) +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_continuous(expand = c(0, 0)) +
guides(fill = guide_colorbar(barwidth = 3, barheight = 0.5)) +
xlab('Labels') +
ylab('Subgroup') +
#ylab("Subgroup                                        Complement                                        Subgroup") +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
legend.title = element_blank(),#element_text(size = 6),
legend.text  = element_text(size = 4),
legend.position="bottom",
legend.justification="right",
legend.margin=margin(-20, 0, 0, 0))
plot
# overall plot
plot <- plotdata %>%
#filter(correction %in% c("none", "entropy", "sqrtnN")) %>%
filter(correction %in% c("labelwise", "pairwise", "norm")) %>%
ggplot(aes(y=sg, x=lambda, fill=rank)) +
geom_tile(color="white") +
facet_grid(comparison ~ correction,
#labeller = label_both) +
labeller = labeller(correction =
c("norm" = "type: norm",
"labelwise" = "type: labelwise",
"pairwise" = "type: pairwise"),
comparison =
"average" = "comparison: average")) +
scale_colour_gradient2(low = "red", mid = "white",
high = "blue", midpoint = 0,
aesthetics = "fill",
limits=c(-10, 10)) +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_continuous(expand = c(0, 0)) +
guides(fill = guide_colorbar(barwidth = 3, barheight = 0.5)) +
xlab('Labels') +
ylab('Subgroup') +
#ylab("Subgroup                                        Complement                                        Subgroup") +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
legend.title = element_blank(),#element_text(size = 6),
legend.text  = element_text(size = 4),
legend.position="bottom",
legend.justification="right",
legend.margin=margin(-20, 0, 0, 0))
# overall plot
plot <- plotdata %>%
#filter(correction %in% c("none", "entropy", "sqrtnN")) %>%
filter(correction %in% c("labelwise", "pairwise", "norm")) %>%
ggplot(aes(y=sg, x=lambda, fill=rank)) +
geom_tile(color="white") +
facet_grid(comparison ~ correction,
#labeller = label_both) +
labeller = labeller(correction =
c("norm" = "type: norm",
"labelwise" = "type: labelwise",
"pairwise" = "type: pairwise"),
comparison =
c("average" = "comparison: average"))) +
scale_colour_gradient2(low = "red", mid = "white",
high = "blue", midpoint = 0,
aesthetics = "fill",
limits=c(-10, 10)) +
scale_x_discrete(labels = as.character(c(1:37))) +
scale_y_continuous(expand = c(0, 0)) +
guides(fill = guide_colorbar(barwidth = 3, barheight = 0.5)) +
xlab('Labels') +
ylab('Subgroup') +
#ylab("Subgroup                                        Complement                                        Subgroup") +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
legend.title = element_blank(),#element_text(size = 6),
legend.text  = element_text(size = 4),
legend.position="bottom",
legend.justification="right",
legend.margin=margin(-20, 0, 0, 0))
plot
name <- paste('otherqms.pdf', sep = "", collapse = NULL)
ggsave(name, width = 20, height = 7, units = "cm")
