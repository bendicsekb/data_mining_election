sample.int(n=c(1,2,3,4,11,12,13), size=7, replace=FALSE)
sample.int(n=c(1,2,3,4,11,12,13), size=6, replace=FALSE)
sample.int(n=7, size=6, replace=FALSE)
sample.int(n=7, size=7, replace=FALSE)
sample.int(n=7, size=7, replace=FALSE)
seed(11072021)
set.esed(11072021)
set.seed(11072021)
sample.int(n=7, size=7, replace=FALSE)
library(mice)
ampute.continuous
ampute
seq(0.01,1.00,by=0.01)
library(ggplot2)
library(mice)
library(tidyverse)
# Working directory
setwd("C:/Users/20200059/Documents/Github/data_mining_election/")
data <- read.table("reversed.xlsx")
data <- read.csv("reversed.csv")
data
data <- read.csv("reversed.csv")
data
data %>%
gather("measure", "time", -c(rows, descs, targets))
names(data)
data %>%
rename("rows" = names(data)[1])
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets))
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
ggplot(aes(x=rows, y=time, color=measure)) %>%
facet_grid(descs ~ targets)
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
ggplot(aes(x=rows, y=time, color=measure)) %>%
facet_grid(descs ~ targets, labeller = label_both)
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
ggplot(aes(x=rows, y=time, colour=measure)) %>%
facet_grid(descs ~ targets, labeller = label_both)
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
ggplot(aes(x=rows, y=time, colour=measure)) +
geom_line() +
facet_grid(descs ~ targets, labeller = label_both)
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
filter(targets == 32) %>%
filter(descs == 32) %>%
ggplot(aes(x=rows, y=time, colour=measure)) +
geom_line()
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
filter(targets == 32) %>%
filter(descs == 32) %>%
filter(measure == 'entropy') %>%
ggplot(aes(x=rows, y=time, colour=measure)) +
geom_line()
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
filter(targets == 32) %>%
filter(descs == 32) %>%
#filter(measure == 'entropy') %>%
ggplot(aes(x=rows, y=time, colour=measure)) +
geom_line() +
facet_grid(descs ~ targets, labeller = label_both)
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
#filter(targets == 32) %>%
#filter(descs == 32) %>%
#filter(measure == 'entropy') %>%
ggplot(aes(x=rows, y=time, colour=measure)) +
geom_line() +
facet_grid(descs ~ targets, labeller = label_both)
?aes
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
filter(targets == 32) %>%
filter(descs == 32) %>%
#filter(measure == 'entropy') %>%
ggplot(aes(x=measure, y=time, fill=rows)) +
geom_point()
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
filter(targets == 32) %>%
filter(descs == 32) %>%
#filter(measure == 'entropy') %>%
ggplot(aes(x=measure, y=time, color=rows, group=targets)) +
geom_point(position = pd)
pd <- position_dodge(.65)
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
filter(targets == 32) %>%
filter(descs == 32) %>%
#filter(measure == 'entropy') %>%
ggplot(aes(x=measure, y=time, color=rows, group=targets)) +
geom_point(position = pd)
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
filter(targets == 32) %>%
filter(descs == 32) %>%
#filter(measure == 'entropy') %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd)
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
#filter(measure == 'entropy') %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd)
data <- read.csv("reversed.csv")
pd <- position_dodge(.65)
data %>%
geom_point(position = pd)
data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
mutate(measure = ordered(measure,
levels = c("entropy", "sqrtnN", "norm", "labelwise", "pairwise"))) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
#filter(measure == 'entropy') %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd)
plot <- data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
mutate(measure = ordered(measure,
levels = c("entropy", "sqrtnN", "norm", "labelwise", "pairwise"))) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
#filter(measure == 'entropy') %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd)
plot
name <- paste('timereversed.pdf', sep = "", collapse = NULL)
ggsave(name, width = 8, height = 6, units = "cm")
# Working directory
setwd("C:/Users/20200059/Documents/Github/data_mining_election/Synthetic/")
data <- read.csv("reversed.csv")
names(data)
pd <- position_dodge(.65)
plot <- data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
mutate(measure = ordered(measure,
levels = c("entropy", "sqrtnN", "norm", "labelwise", "pairwise"))) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
#filter(measure == 'entropy') %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd)
plot
name <- paste('timereversed.pdf', sep = "", collapse = NULL)
ggsave(name, width = 8, height = 6, units = "cm")
filter(measure %in% c('entropy','norm') %>%
plot <- data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
mutate(measure = ordered(measure,
levels = c("entropy", "sqrtnN", "norm", "labelwise", "pairwise"))) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
filter(measure %in% c('entropy','norm')) %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd)
plot
name <- paste('timereversed.pdf', sep = "", collapse = NULL)
ggsave(name, width = 8, height = 6, units = "cm")
plot <- data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
mutate(measure = ordered(measure,
levels = c("entropy", "sqrtnN", "norm", "labelwise", "pairwise"))) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
filter(measure %in% c('entropy','norm')) %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd)
plot
plot <- data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
mutate(measure = ordered(measure,
levels = c("entropy", "sqrtnN", "norm", "labelwise", "pairwise"))) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
filter(measure %in% c('entropy','norm')) %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd) +
xlab('Runtime') +
ylab('Quality measure') +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
legend.title = element_blank(),#element_text(size = 6),
legend.text  = element_text(size = 4),
legend.position="bottom",
legend.justification="right",
legend.margin=margin(-20, 0, 0, 0))
plot
plot <- data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
mutate(measure = ordered(measure,
levels = c("entropy", "sqrtnN", "norm", "labelwise", "pairwise"))) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
filter(measure %in% c('entropy','norm')) %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd) +
xlab('Runtime') +
ylab('Quality measure') +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
legend.title = element_blank(),#element_text(size = 6),
legend.text  = element_text(size = 4),
legend.position="bottom",
legend.justification="right",
legend.margin=margin(-20, 0, 0, 0))
plot
plot <- data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
mutate(measure = ordered(measure,
levels = c("entropy", "sqrtnN", "norm", "labelwise", "pairwise"))) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
filter(measure %in% c('entropy','norm')) %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd) +
xlab('Runtime') +
ylab('Quality measure') +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
#panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
legend.title = element_blank(),#element_text(size = 6),
legend.text  = element_text(size = 4),
legend.position="bottom",
legend.justification="right",
legend.margin=margin(-20, 0, 0, 0))
plot
plot <- data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
mutate(measure = ordered(measure,
levels = c("entropy", "sqrtnN", "norm", "labelwise", "pairwise"))) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
filter(measure %in% c('entropy','norm')) %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd) +
xlab('Runtime') +
ylab('Quality measure') +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
legend.title = element_blank(),#element_text(size = 6),
legend.text  = element_text(size = 4),
legend.position="bottom",
legend.justification="right",
legend.margin=margin(-20, 0, 0, 0))
plot
plot <- data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
mutate(measure = ordered(measure,
levels = c("entropy", "sqrtnN", "norm", "labelwise", "pairwise"))) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
filter(measure %in% c('entropy','norm')) %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd) +
ylab('Runtime') +
xlab('Quality measure') +
#labs(title = '') +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
#legend.title = element_blank(),#element_text(size = 6),
#legend.text  = element_text(size = 4),
#legend.position="bottom",
#legend.justification="right",
#legend.margin=margin(-20, 0, 0, 0))
)
plot
plot <- data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
mutate(measure = ordered(measure,
levels = c("entropy", "sqrtnN", "norm", "labelwise", "pairwise"))) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
filter(measure %in% c('entropy','norm')) %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd) +
scale_y_continuous(expand = c(0, 0)) +
ylab('Runtime') +
xlab('Quality measure') +
#labs(title = '') +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
#legend.title = element_blank(),#element_text(size = 6),
#legend.text  = element_text(size = 4),
#legend.position="bottom",
#legend.justification="right",
#legend.margin=margin(-20, 0, 0, 0))
)
plot
plot <- data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
mutate(measure = ordered(measure,
levels = c("entropy", "sqrtnN", "norm", "labelwise", "pairwise"))) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
filter(measure %in% c('entropy','norm')) %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd) +
ylab('Runtime') +
xlab('Quality measure') +
#labs(title = '') +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
#legend.title = element_blank(),#element_text(size = 6),
#legend.text  = element_text(size = 4),
#legend.position="bottom",
#legend.justification="right",
#legend.margin=margin(-20, 0, 0, 0))
)
plot
name <- paste('timereversed.pdf', sep = "", collapse = NULL)
ggsave(name, width = 6, height = 5, units = "cm")
ggsave(name, width = 12, height = 10, units = "cm")
plot
name <- paste('timereversed.pdf', sep = "", collapse = NULL)
ggsave(name, width = 12, height = 10, units = "cm")
plot <- data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
mutate(measure = ordered(measure,
levels = c("entropy", "sqrtnN", "norm", "labelwise", "pairwise"))) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
filter(measure %in% c('entropy','norm')) %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd) +
ylab('Runtime in seconds') +
xlab('Quality measure') +
#labs(title = '') +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
#legend.title = element_blank(),#element_text(size = 6),
#legend.text  = element_text(size = 4),
#legend.position="bottom",
#legend.justification="right",
#legend.margin=margin(-20, 0, 0, 0))
)
plot <- data %>%
rename("rows" = names(data)[1]) %>%
gather("measure", "time", -c(rows, descs, targets)) %>%
mutate(rows = as.factor(rows)) %>%
mutate(targets = as.factor(targets)) %>%
mutate(descs = as.factor(descs)) %>%
mutate(measure = ordered(measure,
levels = c("entropy", "sqrtnN", "norm", "labelwise", "pairwise"))) %>%
#filter(targets == 32) %>%
filter(descs == 32) %>%
filter(measure %in% c('entropy','norm')) %>%
ggplot(aes(x=measure, y=time, color=rows, shape=targets)) +
geom_point(position = pd) +
ylab('Runtime in seconds') +
xlab('Quality measure') +
#labs(title = '') +
theme_bw() +
theme(plot.title = element_text(vjust=-4),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
#panel.grid.major.y = element_blank(),
panel.grid.minor.y = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=4),
axis.title = element_text(size=10),
legend.title = element_text(size = 6),
legend.text  = element_text(size = 4),
#legend.position="bottom",
#legend.justification="right",
#legend.margin=margin(-20, 0, 0, 0))
)
plot
name <- paste('timereversed.pdf', sep = "", collapse = NULL)
ggsave(name, width = 12, height = 10, units = "cm")
